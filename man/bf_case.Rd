% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bf_case.R
\name{bf_case}
\alias{bf_case}
\title{Build a bit flag by checking for cases}
\usage{
bf_case(
  x,
  ...,
  exclusive = TRUE,
  pos = NULL,
  na.val = NULL,
  description = NULL,
  registry = NULL
)
}
\arguments{
\item{x}{\code{\link[=data.frame]{data.frame(1)}}\cr the table that contains tests
defined in \code{...}.}

\item{...}{\cr any set of (mutually exclusive) statements that results in a
logical return value}

\item{exclusive}{\code{\link[=logical]{logical(1)}}\cr whether the function should check
that the cases are mutually exclusive, or whether it would allow that cases
defined later in the sequence overwrite cases earlier in the sequence.}

\item{pos}{\code{\link[=integer]{integerish(.)}}\cr the position(s) in the bitfield that
should be set.}

\item{na.val}{\code{\link[=character]{character(1)}}\cr optional value that should be
used to substitute NA values in the input data.}

\item{description}{\code{\link[=character]{character(.)}}\cr optional description that
should be used instead of the default function-specific description. This
description is used in the registry legend, so it should have as many
entries as there will be entries per the respective flag in the legend (two
for a binary flag, as many as there are cases for a cases flag and one for
count or numeric flags).}

\item{registry}{\code{\link[=registry]{registry(1)}}\cr a bitfield registry that has
been defined with \code{\link{bf_registry}}; if it's undefined, an empty
registry will be defined on-the-fly.}
}
\value{
an object of class 'registry' with the additional flag defined here.
}
\description{
Build a bit flag by checking for cases
}
\examples{
registry <- bf_case(x = tbl_bityield, exclusive = FALSE,
                    yield >= 11,
                    yield < 11 & yield > 9,
                    yield < 9 & commodity == "maize")
}
