% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bf_length.R
\name{bf_length}
\alias{bf_length}
\title{Build a bit flag by counting aspects of an entity}
\usage{
bf_length(
  x,
  test,
  dec = NULL,
  fill = TRUE,
  pos = NULL,
  na.val = NULL,
  description = NULL,
  registry = NULL
)
}
\arguments{
\item{x}{the object to build bit flags for.}

\item{test}{\code{\link[=character]{character(1)}}\cr the column or layer in \code{x}
for which the length is determined.}

\item{dec}{\code{\link[=character]{character(1)}}\cr regex-compatible symbol that
separates the decimals from the numeric value (such as \code{\\.} in case
the decimal symbol is a ".").}

\item{fill}{\code{\link[=logical]{logical(1)}}\cr whether the function should consider
lengths from 0 through the maximum length in \code{x[[test]]}, or whether it
should only document occurring lengths (this may be useful if the bitfield
shall be extended downstream, where the smaller lengths added by \code{fill
  = TRUE} should be representable).}

\item{pos}{\code{\link[=integer]{integerish(.)}}\cr the position(s) in the bitfield that
should be set.}

\item{na.val}{\code{\link[=logical]{logical(1)}}\cr value that needs to be given, if the
test for this flag results in \code{NA}s.}

\item{description}{\code{\link[=character]{character(.)}}\cr optional description that
should be used instead of the default function-specific description. This
description is used in the registry legend, so it should have as many
entries as there will be entries per the respective flag in the legend (two
for a binary flag, as many as there are cases for a cases flag and one for
count or numeric flags).}

\item{registry}{\code{\link[=registry]{registry(1)}}\cr a bitfield registry that has
been defined with \code{\link{bf_registry}}; if it's undefined, an empty
registry will be defined on-the-fly.}
}
\value{
an (updated) object of class 'registry' with the additional flag
defined here.
}
\description{
Build a bit flag by counting aspects of an entity
}
\details{
The console output of various classes shows decimals that are not
present or round decimals that are present, even for ordinary numeric
vectors. If a bit flag doesn't seem to coincide with the values you see in
the console, double check the values with \code{\link{str}}.

Determine the number of decimals of coordinates to determine their
precision:
\href{https://en.wikipedia.org/wiki/Decimal_degrees}{https://en.wikipedia.org/wiki/Decimal_degrees}
}
\examples{
bf_length(x = bf_tbl, test = "commodity")
bf_length(x = bf_tbl, test = "y", dec = "\\\\.")
}
